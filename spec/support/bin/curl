#!/usr/bin/env node

var spawn = require('spawn-cmd').spawn;
var fs = require('../../../lib/utils/fs');
var path = require('path');
var wrench = require('wrench');

var args = process.argv;
var fileNameParts = args[args.length - 1].split('/');
var fileName = fileNameParts[fileNameParts.length - 1];

console.error('CURL called for ', fileName);

if (! fileName.match(/^dev_bundle_/)) {
  
  // if it's not the dev bundle we are looking for, bail out to standard curl
  console.error('skipping...')
  spawn('/usr/bin/curl', process.argv.slice(2));

} else {
  // it's a dev bundle, so cache it
  console.error('caching...')
  
  var cachePath = path.join(__dirname, '..', 'cache');
  var devBundlePath = path.join(cachePath, fileName);

  var outputFile = function() {
    fs.createReadStream(devBundlePath).pipe(process.stdout);
  };

  if (!fs.existsSync(devBundlePath)) {

    if (!fs.existsSync(cachePath))
      wrench.mkdirSyncRecursive(cachePath);

    var url = process.argv[process.argv.length - 1];

    var curlCache = spawn('/usr/bin/curl', ['-O', url], { cwd: cachePath }, function() {});

    curlCache.on('exit', outputFile);  

  } else {
    outputFile();
  }
}
